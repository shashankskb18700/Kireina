{"ast":null,"code":"var _jsxFileName = \"/Users/shashankshekhar/REACTJS/animeser/src/components/search/search.js\",\n    _s = $RefreshSig$();\n\nimport { signOut } from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetc } from \"../../redux/action/index\";\nimport { authService } from \"../../firebase/fbase\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./search.css\";\nimport searchIcon from \"../.././Assets/icons/zoom-front-premium.png\"; // import { XMLParser } from \"fast-xml-parser\";\n// import XMLParse from \"react-xml-parser\";\n// import parser from 'xml2json';\n// var parse = new DOMParser();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  _s();\n\n  const [title, setTitle] = useState(\" \");\n  console.log(props.wholest.srchRedu); // var xmlDoc = parse.parseFromString(props.wholest.srchRedu, \"text/xml\");\n  // console.log(typeof xmlDoc);\n  //   const b = xmlDoc.map((item) => {\n  //   return <span>{item.FirstName}</span>;\n  // });\n  //xml-js parser\n  // var result1 = convert.xml2json(props.wholest.srchRedu, {\n  //   compact: true,\n  //   spaces: 4,\n  // });\n  // console.log(result1);\n  // all these parser will not work because whene you dont have data have ing  if else is must\n  // react-xml-parser\n  // let xml = new XMLParse().parseFromString(props.wholest.srchRedu);\n  // console.log(xml);\n  // fast-xml-parser\n  // const parser = new XMLParser();\n  // let jObj = parser.parse(props.wholest.srchRedu);\n  // console.log(jObj);\n  // const jj = jObj.ann.anime.map(a => {\n  //   return (\n  //     <div>{a.info[1]}</div>\n  //   )\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inp\",\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sub-but\",\n        onClick: () => props.fetc(title),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: searchIcon,\n          className: \"submit-png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"2iwmN3V9E4YeAah/nUgegnBMxP4=\");\n\n_c = Search;\n\nconst mapStateToProps = state => {\n  return {\n    wholest: state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetc\n})(Search);\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/shashankshekhar/REACTJS/animeser/src/components/search/search.js"],"names":["signOut","React","useState","connect","fetc","authService","Redirect","searchIcon","Search","props","title","setTitle","console","log","wholest","srchRedu","e","target","value","mapStateToProps","state"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,6CAAvB,C,CAEA;AACA;AACA;AAEA;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,GAAD,CAAlC;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,OAAN,CAAcC,QAA1B,EAHwB,CAKxB;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,2BACE;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEL,KAHT;AAIE,QAAA,QAAQ,EAAGM,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAE,MAAMT,KAAK,CAACL,IAAN,CAAWM,KAAX,CAA3C;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEH,UAAV;AAAsB,UAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CArDD;;GAAMC,M;;KAAAA,M;;AAuDN,MAAMW,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAAP;AACD,CAFD;;AAIA,eAAejB,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAmCI,MAAnC,CAAf","sourcesContent":["import { signOut } from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetc } from \"../../redux/action/index\";\nimport { authService } from \"../../firebase/fbase\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./search.css\";\nimport searchIcon from \"../.././Assets/icons/zoom-front-premium.png\";\n\n// import { XMLParser } from \"fast-xml-parser\";\n// import XMLParse from \"react-xml-parser\";\n// import parser from 'xml2json';\n\n// var parse = new DOMParser();\n\nconst Search = (props) => {\n  const [title, setTitle] = useState(\" \");\n\n  console.log(props.wholest.srchRedu);\n\n  // var xmlDoc = parse.parseFromString(props.wholest.srchRedu, \"text/xml\");\n  // console.log(typeof xmlDoc);\n\n  //   const b = xmlDoc.map((item) => {\n  //   return <span>{item.FirstName}</span>;\n  // });\n  //xml-js parser\n\n  // var result1 = convert.xml2json(props.wholest.srchRedu, {\n  //   compact: true,\n  //   spaces: 4,\n  // });\n  // console.log(result1);\n\n  // all these parser will not work because whene you dont have data have ing  if else is must\n\n  // react-xml-parser\n  // let xml = new XMLParse().parseFromString(props.wholest.srchRedu);\n  // console.log(xml);\n\n  // fast-xml-parser\n  // const parser = new XMLParser();\n  // let jObj = parser.parse(props.wholest.srchRedu);\n  // console.log(jObj);\n\n  // const jj = jObj.ann.anime.map(a => {\n  //   return (\n  //     <div>{a.info[1]}</div>\n  //   )\n  // })\n\n  return (\n    <div>\n      <div>\n        <input\n          className=\"inp\"\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        ></input>\n        <button className=\"sub-but\" onClick={() => props.fetc(title)}>\n          <img src={searchIcon} className=\"submit-png\" />\n        </button>\n\n        {/* <div>{b}</div> */}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { wholest: state };\n};\n\nexport default connect(mapStateToProps, { fetc })(Search);\n"]},"metadata":{},"sourceType":"module"}
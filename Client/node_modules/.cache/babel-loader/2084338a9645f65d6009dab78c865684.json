{"ast":null,"code":"var _jsxFileName = \"/Users/shashankshekhar/REACTJS/animeser/Client/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import firebase from \"../firebase/fbase\";\n\nimport { authService } from \"../firebase/fbase\";\nimport Search from \"./search/search.js\";\nimport Auth from \"./Auth/Auth\";\nimport AppRouter from \"./Router\";\nimport NavHeader from \"./Header-Footer/NavHeader/NavHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [init, setInit] = useState(false);\n  useEffect(() => {\n    authService.onAuthStateChanged(authService.getAuth(), user => {\n      if (user) {\n        setIsLoggedIn(true);\n      }\n\n      setInit(true);\n    });\n  }, []); // console.log(firebase);\n\n  console.log(authService.getAuth().currentUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NavHeader, {\n        authStatus: isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: init ? /*#__PURE__*/_jsxDEV(AppRouter, {\n        isLoggedIn: isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }, this) : \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ugDqRDtGqHcnLhQhYJS8maYRvGM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shashankshekhar/REACTJS/animeser/Client/src/components/App.js"],"names":["React","useState","useEffect","authService","Search","Auth","AppRouter","NavHeader","App","isLoggedIn","setIsLoggedIn","init","setInit","onAuthStateChanged","getAuth","user","console","log","currentUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,WAAW,CAACU,kBAAZ,CAA+BV,WAAW,CAACW,OAAZ,EAA/B,EAAuDC,IAAD,IAAU;AAC9D,UAAIA,IAAJ,EAAU;AACRL,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AACDE,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KALD;AAMD,GAPQ,EAON,EAPM,CAAT,CAJgB,CAYhB;;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYd,WAAW,CAACW,OAAZ,GAAsBI,WAAlC;AACA,sBACE;AAAA,4BACE;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,UAAU,EAAET;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAME,IAAI,gBAAG,QAAC,SAAD;AAAW,QAAA,UAAU,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAH,GAA2C;AAArD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzBD;;GAAMD,G;;KAAAA,G;AA2BN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import firebase from \"../firebase/fbase\";\nimport { authService } from \"../firebase/fbase\";\n\nimport Search from \"./search/search.js\";\nimport Auth from \"./Auth/Auth\";\nimport AppRouter from \"./Router\";\nimport NavHeader from \"./Header-Footer/NavHeader/NavHeader\";\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [init, setInit] = useState(false);\n\n  useEffect(() => {\n    authService.onAuthStateChanged(authService.getAuth(), (user) => {\n      if (user) {\n        setIsLoggedIn(true);\n      }\n      setInit(true);\n    });\n  }, []);\n  // console.log(firebase);\n  console.log(authService.getAuth().currentUser);\n  return (\n    <div>\n      <div>\n        <NavHeader authStatus={isLoggedIn} />\n      </div>\n      <div>{init ? <AppRouter isLoggedIn={isLoggedIn} /> : \"loading\"}</div>\n      {/* <Auth /> */}\n\n      {/* <Search /> */}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
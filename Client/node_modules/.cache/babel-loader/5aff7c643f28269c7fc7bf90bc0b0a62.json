{"ast":null,"code":"var _jsxFileName = \"/Users/shashankshekhar/REACTJS/animeser/Client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { authService } from \"../../firebase/fbase\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = props => {\n  _s();\n\n  const [newUser, setNewUser] = useState(false); // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n\n  const onClick = () => {\n    // changing previous value\n    setNewUser(e => !e);\n  };\n\n  console.log(props.authDtls === true); // if (props.authDtls) {\n  //   const { email, password } = props.authDtls;\n  //   setEmail(email);\n  //   setPassword(password);\n  // }\n\n  const SignInSignup = async () => {\n    const auth = authService.getAuth();\n    let data;\n    const {\n      email,\n      password\n    } = props.authDtls;\n\n    try {\n      if (newUser) {\n        data = await authService.createUserWithEmailAndPassword(auth, email, password); //sign up\n      } else {\n        data = await authService.signInWithEmailAndPassword(auth, email, password); //sign in\n      }\n\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (props.authDtls.email && props.authDtls.password) {\n    SignInSignup();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authh\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"au\",\n        children: [newUser ? /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: onClick,\n          children: [newUser ? \"Already a user ? please Log in     \" : \"New user ? please sign up    \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"tTT3ucBn+RD9Hmh5aB464PbBJGY=\");\n\n_c = Auth;\n\nconst mapStateToProps = state => {\n  return {\n    authDtls: state.AuthDetail\n  };\n};\n\nexport default connect(mapStateToProps)(Auth);\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/shashankshekhar/REACTJS/animeser/Client/src/components/Auth/Auth.js"],"names":["React","useState","connect","authService","SignIn","SignUp","Auth","props","newUser","setNewUser","onClick","e","console","log","authDtls","SignInSignup","auth","getAuth","data","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","error","mapStateToProps","state","AuthDetail"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC,CADsB,CAEtB;AACA;;AAEA,QAAMS,OAAO,GAAG,MAAM;AACpB;AACAD,IAAAA,UAAU,CAAEE,CAAD,IAAO,CAACA,CAAT,CAAV;AACD,GAHD;;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,QAAN,KAAmB,IAA/B,EAVsB,CAWtB;AACA;AACA;AACA;AACA;;AAEA,QAAMC,YAAY,GAAG,YAAY;AAC/B,UAAMC,IAAI,GAAGb,WAAW,CAACc,OAAZ,EAAb;AACA,QAAIC,IAAJ;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBb,KAAK,CAACO,QAAlC;;AACA,QAAI;AACF,UAAIN,OAAJ,EAAa;AACXU,QAAAA,IAAI,GAAG,MAAMf,WAAW,CAACkB,8BAAZ,CACXL,IADW,EAEXG,KAFW,EAGXC,QAHW,CAAb,CADW,CAMX;AACD,OAPD,MAOO;AACLF,QAAAA,IAAI,GAAG,MAAMf,WAAW,CAACmB,0BAAZ,CACXN,IADW,EAEXG,KAFW,EAGXC,QAHW,CAAb,CADK,CAML;AACD;;AACDR,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACD,KAjBD,CAiBE,OAAOK,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD;AACF,GAxBD;;AA0BA,MAAIhB,KAAK,CAACO,QAAN,CAAeK,KAAf,IAAwBZ,KAAK,CAACO,QAAN,CAAeM,QAA3C,EAAqD;AACnDL,IAAAA,YAAY;AACb;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA,mBACGP,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAgB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAD1B,eAKE;AAAK,UAAA,OAAO,EAAEE,OAAd;AAAA,qBACGF,OAAO,GACJ,qCADI,GAEJ,+BAHN,EAGuC,GAHvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAnED;;GAAMF,I;;KAAAA,I;;AAoEN,MAAMkB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEX,IAAAA,QAAQ,EAAEW,KAAK,CAACC;AAAlB,GAAP;AACD,CAFD;;AAGA,eAAexB,OAAO,CAACsB,eAAD,CAAP,CAAyBlB,IAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { authService } from \"../../firebase/fbase\";\n\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\n\nimport \"./Auth.css\";\n\nconst Auth = (props) => {\n  const [newUser, setNewUser] = useState(false);\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n\n  const onClick = () => {\n    // changing previous value\n    setNewUser((e) => !e);\n  };\n\n  console.log(props.authDtls === true);\n  // if (props.authDtls) {\n  //   const { email, password } = props.authDtls;\n  //   setEmail(email);\n  //   setPassword(password);\n  // }\n\n  const SignInSignup = async () => {\n    const auth = authService.getAuth();\n    let data;\n    const { email, password } = props.authDtls;\n    try {\n      if (newUser) {\n        data = await authService.createUserWithEmailAndPassword(\n          auth,\n          email,\n          password\n        );\n        //sign up\n      } else {\n        data = await authService.signInWithEmailAndPassword(\n          auth,\n          email,\n          password\n        );\n        //sign in\n      }\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (props.authDtls.email && props.authDtls.password) {\n    SignInSignup();\n  }\n\n  return (\n    <div className=\"authh\">\n      <div className=\"container\">\n        <div className=\"gif\"></div>\n        <div className=\"au\">\n          {newUser ? <SignUp /> : <SignIn />}\n          {/* <button onClick={onClick}>\n            {newUser ? \"Already a user\" : \"New user ? please sign up\"}{\" \"}\n          </button> */}\n          <div onClick={onClick}>\n            {newUser\n              ? \"Already a user ? please Log in     \"\n              : \"New user ? please sign up    \"}{\" \"}\n          </div>\n        </div>\n      </div>\n\n      {/* {props.authDtls ? SignInSignup() : null} */}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return { authDtls: state.AuthDetail };\n};\nexport default connect(mapStateToProps)(Auth);\n"]},"metadata":{},"sourceType":"module"}